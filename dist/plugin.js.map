{"version":3,"file":"plugin.js","sources":["esm/web.js","esm/definitions.js","esm/index.js"],"sourcesContent":["import { WebPlugin } from '@capacitor/core';\r\nexport class GalleryPlusWeb extends WebPlugin {\r\n    constructor() {\r\n        super(...arguments);\r\n        this._mediaList = new Map();\r\n    }\r\n    async checkPermissions() {\r\n        console.warn('checkPermissions is not required on web.');\r\n        return { status: 'granted' };\r\n    }\r\n    async requestPermissions() {\r\n        console.warn('requestPermissions is not required on web.');\r\n        return { status: 'granted' };\r\n    }\r\n    async getMediaList(options = {}) {\r\n        return new Promise((resolve, reject) => {\r\n            const input = document.createElement('input');\r\n            input.type = 'file';\r\n            input.setAttribute('webkitdirectory', '');\r\n            input.setAttribute('multiple', '');\r\n            input.style.display = 'none';\r\n            input.addEventListener('change', async (event) => {\r\n                const target = event.target;\r\n                if (!target.files) {\r\n                    reject(new Error('No files selected'));\r\n                    return;\r\n                }\r\n                try {\r\n                    this._mediaList = new Map();\r\n                    const mediaArray = [];\r\n                    for (const file of target.files) {\r\n                        if (file.type.startsWith('image/') || file.type.startsWith('video/')) {\r\n                            const path = URL.createObjectURL(file);\r\n                            const mediaItem = {\r\n                                id: file.name,\r\n                                name: file.name,\r\n                                type: file.type.startsWith('image/') ? 'image' : 'video',\r\n                                createdAt: file.lastModified,\r\n                                fileSize: file.size,\r\n                                mimeType: file.type,\r\n                                thumbnail: await this.generateImageThumbnailFast(file, 200, 0.8)\r\n                            };\r\n                            this._mediaList.set(file.name, Object.assign(Object.assign({}, mediaItem), { path, file }));\r\n                            if (file.type.startsWith('image/')) {\r\n                                if (options.includeDetails) {\r\n                                    await this.getImageDimensions(path).then((dimensions) => {\r\n                                        mediaItem.width = dimensions.width;\r\n                                        mediaItem.height = dimensions.height;\r\n                                    });\r\n                                }\r\n                                if (options.includeBaseColor) {\r\n                                    await this.getDominantColor(path).then((baseColor) => {\r\n                                        mediaItem.baseColor = baseColor;\r\n                                    });\r\n                                }\r\n                            }\r\n                            else if (file.type.startsWith('video/')) {\r\n                                if (options.includeDetails) {\r\n                                    await this.getVideoDimensions(path).then((dimensions) => {\r\n                                        mediaItem.width = dimensions.width;\r\n                                        mediaItem.height = dimensions.height;\r\n                                    });\r\n                                }\r\n                            }\r\n                            mediaArray.push(mediaItem);\r\n                        }\r\n                    }\r\n                    mediaArray.sort((a, b) => options.sort === 'oldest'\r\n                        ? Number(a.createdAt) - Number(b.createdAt)\r\n                        : Number(b.createdAt) - Number(a.createdAt));\r\n                    console.log('list', this._mediaList);\r\n                    resolve({ media: mediaArray });\r\n                }\r\n                catch (err) {\r\n                    console.error('Error processing files:', err);\r\n                    reject(err);\r\n                }\r\n            });\r\n            document.body.appendChild(input);\r\n            input.click();\r\n            document.body.removeChild(input);\r\n        });\r\n    }\r\n    async getMedia(options) {\r\n        try {\r\n            const mediaItem = this._mediaList.get(options.id);\r\n            if (mediaItem.type === 'image') {\r\n                if (options.includeDetails && mediaItem.path) {\r\n                    await this.getImageDimensions(mediaItem.path).then((dimensions) => {\r\n                        mediaItem.width = dimensions.width;\r\n                        mediaItem.height = dimensions.height;\r\n                    });\r\n                }\r\n                if (options.includeBaseColor && mediaItem.path) {\r\n                    await this.getDominantColor(mediaItem.path).then((baseColor) => {\r\n                        mediaItem.baseColor = baseColor;\r\n                    });\r\n                }\r\n            }\r\n            else if (mediaItem.type === 'video') {\r\n                if (options.includeDetails && mediaItem.path) {\r\n                    await this.getVideoDimensions(mediaItem.path).then((dimensions) => {\r\n                        mediaItem.width = dimensions.width;\r\n                        mediaItem.height = dimensions.height;\r\n                    });\r\n                }\r\n            }\r\n            return mediaItem;\r\n        }\r\n        catch (err) {\r\n            console.error(\"Error in getMedia:\", err);\r\n            throw new Error(\"Failed to retrieve media.\");\r\n        }\r\n    }\r\n    async generateImageThumbnailFast(file, maxSize = 200, quality = 0.8) {\r\n        const imgBitmap = await createImageBitmap(file);\r\n        let width = imgBitmap.width;\r\n        let height = imgBitmap.height;\r\n        if (width > height) {\r\n            height = Math.round((height / width) * maxSize);\r\n            width = maxSize;\r\n        }\r\n        else {\r\n            width = Math.round((width / height) * maxSize);\r\n            height = maxSize;\r\n        }\r\n        if (\"OffscreenCanvas\" in window) {\r\n            const canvas = new OffscreenCanvas(width, height);\r\n            const ctx = canvas.getContext(\"2d\", { alpha: true });\r\n            if (ctx) {\r\n                ctx.clearRect(0, 0, width, height);\r\n                ctx.drawImage(imgBitmap, 0, 0, width, height);\r\n                const blob = await canvas.convertToBlob({ type: \"image/webp\", quality });\r\n                return URL.createObjectURL(blob);\r\n            }\r\n            return \"\";\r\n        }\r\n        else {\r\n            return \"\";\r\n        }\r\n    }\r\n    async getImageDimensions(path) {\r\n        return new Promise((resolve) => {\r\n            const img = new Image();\r\n            img.onload = () => resolve({ width: img.width, height: img.height });\r\n            img.src = path;\r\n        });\r\n    }\r\n    async getVideoDimensions(path) {\r\n        return new Promise((resolve, reject) => {\r\n            const video = document.createElement(\"video\");\r\n            video.src = path;\r\n            video.onloadedmetadata = () => resolve({ width: video.videoWidth, height: video.videoHeight });\r\n            video.onerror = () => reject(\"Failed to load video\");\r\n        });\r\n    }\r\n    async getDominantColor(path) {\r\n        return new Promise((resolve) => {\r\n            const img = new Image();\r\n            img.crossOrigin = \"anonymous\";\r\n            img.onload = () => {\r\n                let canvas;\r\n                let ctx;\r\n                if (\"OffscreenCanvas\" in window) {\r\n                    canvas = new OffscreenCanvas(10, 10);\r\n                    ctx = canvas.getContext(\"2d\");\r\n                }\r\n                else {\r\n                    canvas = document.createElement(\"canvas\");\r\n                    ctx = canvas.getContext(\"2d\");\r\n                }\r\n                if (ctx) {\r\n                    canvas.width = 10;\r\n                    canvas.height = 10;\r\n                    ctx.drawImage(img, 0, 0, 10, 10);\r\n                    const pixelData = ctx.getImageData(0, 0, 10, 10).data;\r\n                    let r = 0, g = 0, b = 0, count = 0;\r\n                    for (let i = 0; i < pixelData.length; i += 4) {\r\n                        r += pixelData[i];\r\n                        g += pixelData[i + 1];\r\n                        b += pixelData[i + 2];\r\n                        count++;\r\n                    }\r\n                    r = Math.round(r / count);\r\n                    g = Math.round(g / count);\r\n                    b = Math.round(b / count);\r\n                    const hex = `#${r.toString(16).padStart(2, \"0\")}${g\r\n                        .toString(16)\r\n                        .padStart(2, \"0\")}${b\r\n                        .toString(16)\r\n                        .padStart(2, \"0\")}`;\r\n                    resolve(hex);\r\n                }\r\n                else {\r\n                    resolve(\"#000000\"); // fallback-color\r\n                }\r\n            };\r\n            img.onerror = () => resolve(\"#000000\"); // catch error\r\n            img.src = path;\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=web.js.map","/**\r\n * Filters for querying media items from the gallery.\r\n */\r\nexport var MediaFilter;\r\n(function (MediaFilter) {\r\n    /** No filtering, returns all media */\r\n    MediaFilter[\"All\"] = \"all\";\r\n    /** Only return panoramic images */\r\n    MediaFilter[\"Panorama\"] = \"panorama\";\r\n    /** Only return HDR images */\r\n    MediaFilter[\"HDR\"] = \"hdr\";\r\n    /** Only return screenshots */\r\n    MediaFilter[\"Screenshot\"] = \"screenshot\";\r\n})(MediaFilter || (MediaFilter = {}));\r\n/**\r\n * Represents special subtypes of media items, such as motion photos,\r\n * panoramas, HDR images, or slow-motion videos.\r\n */\r\nexport var MediaSubtype;\r\n(function (MediaSubtype) {\r\n    /** A Live Photo (iOS) or Motion Photo (Android) */\r\n    MediaSubtype[\"MotionPhoto\"] = \"motion_photo\";\r\n    /** A panorama image */\r\n    MediaSubtype[\"Panorama\"] = \"panorama\";\r\n    /** A high dynamic range (HDR) image */\r\n    MediaSubtype[\"HDR\"] = \"hdr\";\r\n    /** A screenshot */\r\n    MediaSubtype[\"Screenshot\"] = \"screenshot\";\r\n    /** A photo with depth effect (bokeh) */\r\n    MediaSubtype[\"Portrait\"] = \"portrait\";\r\n    /** A high frame rate slow-motion video */\r\n    MediaSubtype[\"SlowMotion\"] = \"slow_motion\";\r\n    /** A time-lapse video */\r\n    MediaSubtype[\"Timelapse\"] = \"timelapse\";\r\n})(MediaSubtype || (MediaSubtype = {}));\r\n//# sourceMappingURL=definitions.js.map","import { registerPlugin } from '@capacitor/core';\r\nimport { GalleryPlusWeb } from './web';\r\nconst GalleryPlus = registerPlugin('GalleryPlus', {\r\n    web: () => new GalleryPlusWeb()\r\n});\r\nexport * from './definitions';\r\nexport { GalleryPlus };\r\n//# sourceMappingURL=index.js.map"],"names":["WebPlugin","MediaFilter","MediaSubtype","registerPlugin"],"mappings":"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"}